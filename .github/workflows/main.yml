name: Deploy to DigitalOcean

on:
  push:
    branches:
      - master  # Trigger on pushes to the master branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # Install dependencies
    - name: Install dependencies
      run: npm install

    # Deploy to DigitalOcean Droplet
    - name: Deploy to DigitalOcean
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PASSWORD: ${{ secrets.PASSWORD }}
      run: |
        echo "Deploying to DigitalOcean server..."
        sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "
        cd /root/express-backend || {
          echo 'Directory /express-backend not found. Exiting.' && exit 1;
        }

        # Pull the latest code
        git pull origin master || {
          echo 'Failed to pull from repository. Exiting.' && exit 1;
        }

        # Install dependencies
        npm install

        # Check if PM2 is installed, install if not
        if ! command -v pm2 &> /dev/null; then
          echo 'PM2 not found. Installing...'
          npm install -g pm2
        fi

        # Start or reload the application with PM2 (zero downtime deployment)
        if pm2 describe "express-backend" > /dev/null; then
          echo 'Application already running. Reloading with zero downtime...'
          pm2 reload "express-backend" --update-env || {
            echo 'Failed to reload application. Exiting.' && exit 1;
          }
        else
          echo 'Starting application...'
          pm2 start index.js --name "express-backend" --watch || {
            echo 'Failed to start application. Exiting.' && exit 1;
          }
        fi

        # Ensure the application is running
        pm2 list || {
          echo 'Failed to verify PM2 processes. Exiting.' && exit 1;
        }
        "
